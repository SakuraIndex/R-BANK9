name: Generate long-term charts

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: long-charts-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Resolve INDEX_KEY & market
        id: resolve
        shell: bash
        run: |
          set -euo pipefail
          REPO_RAW="${GITHUB_REPOSITORY##*/}"
          REPO_LC="$(echo "$REPO_RAW" | tr '[:upper:]' '[:lower:]')"
          case "$REPO_LC" in
            r-bank9)        KEY="rbank9";     TZ="Asia/Tokyo";        S="09:00"; E="15:30" ;;
            3_sakura_space) KEY="astra4";     TZ="Asia/Tokyo";        S="09:00"; E="15:30" ;;
            s-coin-)        KEY="scoin_plus"; TZ="Asia/Tokyo";        S="09:00"; E="15:30" ;;
            ain-10)         KEY="ain10";      TZ="America/New_York"; S="09:30"; E="16:00" ;;
            *)              KEY="index";      TZ="UTC";               S="00:00"; E="23:59" ;;
          esac
          echo "INDEX_KEY=$KEY" | tee -a "$GITHUB_ENV"
          echo "market_tz=$TZ"       >> "$GITHUB_OUTPUT"
          echo "session_start=$S"    >> "$GITHUB_OUTPUT"
          echo "session_end=$E"      >> "$GITHUB_OUTPUT"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          python -V
          pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas numpy matplotlib
          fi

      - name: Clear pycache
        shell: bash
        run: |
          set -euo pipefail
          rm -rf scripts/__pycache__ || true

      - name: Generate long-term charts (with 1d %)
        env:
          INDEX_KEY: ${{ env.INDEX_KEY }}
          MARKET_TZ: ${{ steps.resolve.outputs.market_tz }}
          SESSION_START: ${{ steps.resolve.outputs.session_start }}
          SESSION_END: ${{ steps.resolve.outputs.session_end }}
        shell: bash
        run: |
          set -euo pipefail
          python scripts/long_charts.py
          echo "---- outputs ----"
          ls -lah docs/outputs || true

      # 旧接頭辞の正規化（重複は上書き/削除）
      - name: Normalize legacy filenames
        env:
          INDEX_KEY: ${{ env.INDEX_KEY }}
        shell: bash
        run: |
          set -euo pipefail
          OUTDIR="docs/outputs"
          shopt -s nullglob
          normalize_prefix() {
            local wrong="$1"; local right="$2"
            for f in "$OUTDIR"/${wrong}*; do
              base="$(basename "$f")"
              new="$OUTDIR/${base/$wrong/$right}"
              if [ "$f" != "$new" ]; then
                if [ -e "$new" ]; then rm -f "$f"; else mv -f "$f" "$new"; fi
              fi
            done
          }
          case "$INDEX_KEY" in
            rbank9) normalize_prefix "r_bank9_" "rbank9_";;
            ain10)  normalize_prefix "ain_10_"  "ain10_";;
            astra4) normalize_prefix "3_sakura_space_" "astra4_";;
            scoin_plus)
                    normalize_prefix "s_coin__" "scoin_plus_"
                    normalize_prefix "s_coin_"  "scoin_plus_"
                    ;;
          esac

      - name: Sanity check - prefix
        env:
          INDEX_KEY: ${{ env.INDEX_KEY }}
        shell: bash
        run: |
          set -euo pipefail
          OUTDIR="docs/outputs"
          mismatched=0
          shopt -s nullglob
          for f in "$OUTDIR"/*; do
            base="$(basename "$f")"
            case "$base" in README.md|_last_run.txt) continue;; esac
            [[ "$base" == "${INDEX_KEY}_"* ]] || { echo "❌ prefix mismatch: $base"; mismatched=1; }
          done
          [ $mismatched -eq 0 ] || { echo "Prefix mismatch (INDEX_KEY=$INDEX_KEY)"; exit 1; }
          echo "✅ Prefix check passed."

      - name: Commit charts if changed (PNG + stats)
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # ★ PNG を必ず含める
          git add docs/outputs/${{ env.INDEX_KEY }}_1d.png  2>/dev/null || true
          git add docs/outputs/${{ env.INDEX_KEY }}_7d.png  2>/dev/null || true
          git add docs/outputs/${{ env.INDEX_KEY }}_1m.png  2>/dev/null || true
          git add docs/outputs/${{ env.INDEX_KEY }}_1y.png  2>/dev/null || true

          # テキスト類
          git add docs/outputs/*_stats.json docs/outputs/*_post_intraday.txt 2>/dev/null || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(charts): update long charts & stats (${{ env.INDEX_KEY }})"
            git push
          fi
