name: Generate long-term charts (R-BANK9 1d/7d/1m/1y + stats)

on:
  workflow_dispatch:
  schedule:
    - cron: '05 1 * * *'   # 毎日 10:05 JST

permissions:
  contents: write

concurrency:
  group: long-charts-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      INDEX_KEY: rbank9

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Resolve INDEX_KEY & market
        id: resolve
        shell: bash
        run: |
          echo "market_tz=Asia/Tokyo" >> "$GITHUB_OUTPUT"
          echo "session_start=09:00"  >> "$GITHUB_OUTPUT"
          echo "session_end=15:30"    >> "$GITHUB_OUTPUT"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          python -V
          pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pandas numpy matplotlib
          fi

      - name: Clear pycache
        shell: bash
        run: |
          set -euo pipefail
          rm -rf scripts/__pycache__ || true

      - name: Update history (if available)
        shell: bash
        run: |
          set -euo pipefail
          if [ -f scripts/update_history.py ]; then
            echo "running scripts/update_history.py"
            python scripts/update_history.py || true
          else
            echo "no scripts/update_history.py (skip)"
          fi

      - name: Generate long-term charts
        shell: bash
        env:
          MARKET_TZ:     ${{ steps.resolve.outputs.market_tz }}
          SESSION_START: ${{ steps.resolve.outputs.session_start }}
          SESSION_END:   ${{ steps.resolve.outputs.session_end }}
        run: |
          set -euo pipefail

          echo "== BEFORE (docs/outputs) =="
          ls -lah docs/outputs || true
          echo "-- existing hashes --"
          (
            set -e
            cd docs/outputs 2>/dev/null || exit 0
            shopt -s nullglob
            for f in *.png *.csv *.json; do
              printf "%-22s " "$f"
              sha256sum "$f" | awk '{print $1}'
            done
          )

          echo "== run long_charts.py =="
          python scripts/long_charts.py

          echo "== AFTER (docs/outputs) =="
          ls -lah docs/outputs || true
          echo "-- hashes after generation --"
          (
            set -e
            cd docs/outputs 2>/dev/null || exit 0
            shopt -s nullglob
            for f in *.png *.csv *.json; do
              printf "%-22s " "$f"
              sha256sum "$f" | awk '{print $1}'
            done
          )

      - name: Normalize legacy filenames
        shell: bash
        run: |
          set -euo pipefail
          OUTDIR="docs/outputs"; shopt -s nullglob
          for f in "$OUTDIR"/r_bank9_*; do
            base="$(basename "$f")"
            new="$OUTDIR/${base/r_bank9_/rbank9_}"
            if [ "$f" != "$new" ]; then
              mv -f "$f" "$new"
              echo "rename: $base -> $(basename "$new")"
            fi
          done

      - name: Sanity check - prefix
        shell: bash
        env:
          INDEX_KEY: ${{ env.INDEX_KEY }}
        run: |
          set -euo pipefail
          OUTDIR="docs/outputs"; shopt -s nullglob; err=0
          for f in "$OUTDIR"/*; do
            b="$(basename "$f")"
            case "$b" in README.md|_last_run.txt) continue ;; esac
            if [[ "$b" != "${INDEX_KEY}_"* ]]; then
              echo "❌ prefix mismatch: $b"; err=1
            fi
          done
          if [ $err -ne 0 ]; then
            echo "Prefix mismatch (INDEX_KEY=$INDEX_KEY)"; exit 1
          fi
          echo "✅ Prefix check passed."

      - name: Commit charts if changed (force-add outputs dir)
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # 取りこぼし防止でディレクトリごと add
          git add -A docs/outputs

          echo "== git status --porcelain =="
          git status --porcelain || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(charts): update long charts & stats (${INDEX_KEY})"
            git push
          fi
